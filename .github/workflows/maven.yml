# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  ok-to-test:
    runs-on: ubuntu-latest
    outputs:
      enable: ${{ steps.ok-to-test.outputs.enable }}
    steps:
      - name: Get the version
        id: get_version
        run: echo ${GITHUB_REF/refs\/tags\//}
      - name: Check if run ci
        id: check-ci-enable
        uses: actions/github-script@v3
        with:
          script: |
            // GITHUB_BASE_REF is only set for pull request events, otherwise it is ''.
            const isDefaultBranch = process.env.GITHUB_BASE_REF === ''
            if (isDefaultBranch) {
              return true
            }

            const okToTest = context.payload.pull_request.labels
                 .map(label => label.name)
                 .includes("ok-to-test")

            if (!okToTest) {
              core.setFailed("Please add ok-to-test label.");
            }
            return okToTest
          result-encoding: string
      - name: Set output
        id: ok-to-test
        run: echo "::set-output name=enable::${{ steps.check-ci-enable.outputs.result }}"
  build:
    needs: [ ok-to-test ]
    if: needs.ok-to-test.outputs.enable == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: mvn -B package --file pom.xml
